services:
  server:
    container_name: server
    build:
      dockerfile: Dockerfile
      context: .
      target: dev
    environment:
      NODE_ENV: development
    ports:
      - 8000:8000
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
    networks:
      - backend
    command: npm run start:dev

  redis:
    container_name: cache
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - backend

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: local_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', "sh -c 'pg_isready -U postgres -d local_db'"]
      interval: 10s
      timeout: 5s
      retries: 0
    networks:
      - backend

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin4
    ports:
      - 5050:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - backend

volumes:
  redis:
    driver: local
  postgres_data:
  pgadmin_data:

networks:
  backend:
    driver: bridge
